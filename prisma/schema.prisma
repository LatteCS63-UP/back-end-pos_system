generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model MasProvince {
  ProvinceID     Int           @id
  ProvinceNameTh String        @unique @db.VarChar(255)
  ProvinceNameEn String?       @unique @db.VarChar(255)
  RecordStatus   String?       @db.VarChar(1)
  CreateDate     DateTime?     @db.DateTime(0)
  CreateUser     String?       @db.VarChar(10)
  LastDate       DateTime?     @db.DateTime(0)
  LastUser       String?       @db.VarChar(10)
  MasDistrict    MasDistrict[]
  Shop           Shop[]
}

model MasDistrict {
  DistrictID     Int              @id
  DistrictNameTh String           @db.VarChar(255)
  DistrictNameEn String?          @db.VarChar(255)
  ProvinceID     Int
  RecordStatus   String?          @db.VarChar(1)
  CreateDate     DateTime?        @db.DateTime(0)
  CreateUser     String?          @db.VarChar(10)
  LastDate       DateTime?        @db.DateTime(0)
  LastUser       String?          @db.VarChar(10)
  DistrictFK1    MasProvince?     @relation(fields: [ProvinceID], references: [ProvinceID])
  MasSubDistrict MasSubDistrict[]
  Shop           Shop[]

  @@index([ProvinceID], map: "MasDistrict_ProvinceID_fkey")
}

model MasSubDistrict {
  SubDistrictID     Int          @id
  SubDistrictNameTh String       @db.VarChar(255)
  SubDistrictNameEn String?      @db.VarChar(255)
  DistrictID        Int
  RecordStatus      String?      @db.VarChar(1)
  CreateDate        DateTime?    @db.DateTime(0)
  CreateUser        String?      @db.VarChar(10)
  LastDate          DateTime?    @db.DateTime(0)
  LastUser          String?      @db.VarChar(10)
  SubDistrictFK1    MasDistrict? @relation(fields: [DistrictID], references: [DistrictID])
  Shop              Shop[]

  @@index([DistrictID], map: "MasSubDistrict_DistrictID_fkey")
}

model MasJobTitle {
  JobTitleID    Int        @id @default(autoincrement())
  JobTitle_name String     @unique @db.VarChar(255)
  RecordStatus  String?    @db.VarChar(1)
  CreateDate    DateTime?  @db.DateTime(0)
  CreateUser    String?    @db.VarChar(10)
  LastDate      DateTime?  @db.DateTime(0)
  LastUser      String?    @db.VarChar(10)
  Employee      Employee[]
  Owner         Owner[]
  SysAdmin      SysAdmin[]
}

model Shop {
  ShopID          Int               @id @default(autoincrement())
  Shop_code       String            @unique @db.VarChar(255)
  Shop_name       String            @db.VarChar(255)
  Shop_address    String            @db.VarChar(255)
  ProvinceID      Int
  DistrictID      Int
  SubDistrictID   Int
  RecordStatus    String?           @db.VarChar(1)
  CreateDate      DateTime?         @db.DateTime(0)
  CreateUser      String?           @db.VarChar(10)
  LastDate        DateTime?         @db.DateTime(0)
  LastUser        String?           @db.VarChar(10)
  Customer        Customer[]
  Employee        Employee[]
  Owner           Owner[]
  Product         Product[]
  ProductExchange ProductExchange[]
  ShopFK2         MasDistrict?      @relation(fields: [DistrictID], references: [DistrictID])
  ShopFK1         MasProvince?      @relation(fields: [ProvinceID], references: [ProvinceID])
  ShopFK3         MasSubDistrict?   @relation(fields: [SubDistrictID], references: [SubDistrictID])

  @@index([DistrictID], map: "Shop_DistrictID_fkey")
  @@index([ProvinceID], map: "Shop_ProvinceID_fkey")
  @@index([SubDistrictID], map: "Shop_SubDistrictID_fkey")
}

model SysAdmin {
  SysAdminID          Int          @id @default(autoincrement())
  JobTitleID          Int
  SysAdmin_username   String       @unique @db.VarChar(255)
  SysAdmin_password   String       @db.VarChar(255)
  SysAdmin_first_name String       @db.VarChar(255)
  SysAdmin_last_name  String       @db.VarChar(255)
  RecordStatus        String?      @db.VarChar(1)
  CreateDate          DateTime?    @db.DateTime(0)
  CreateUser          String?      @db.VarChar(10)
  LastDate            DateTime?    @db.DateTime(0)
  LastUser            String?      @db.VarChar(10)
  SysAdminFK1         MasJobTitle? @relation(fields: [JobTitleID], references: [JobTitleID])

  @@index([JobTitleID], map: "SysAdmin_JobTitleID_fkey")
}

model Owner {
  OwnerID          Int          @id @default(autoincrement())
  Owner_username   String       @db.VarChar(255)
  Owner_password   String       @db.VarChar(255)
  JobTitleID       Int
  ShopID           Int
  RecordStatus     String?      @db.VarChar(1)
  CreateDate       DateTime?    @db.DateTime(0)
  CreateUser       String?      @db.VarChar(10)
  LastDate         DateTime?    @db.DateTime(0)
  LastUser         String?      @db.VarChar(10)
  Owner_first_name String       @db.VarChar(100)
  Owner_last_name  String       @db.VarChar(100)
  StatusLogin      String       @db.VarChar(1)
  OwnerFK1         MasJobTitle? @relation(fields: [JobTitleID], references: [JobTitleID])
  OwnerFK2         Shop?        @relation(fields: [ShopID], references: [ShopID])

  @@index([JobTitleID], map: "Owner_JobTitleID_fkey")
  @@index([ShopID], map: "Owner_ShopID_fkey")
}

model Employee {
  EmployeeID          Int                   @id @default(autoincrement())
  Employee_username   String                @db.VarChar(255)
  Employee_password   String                @db.VarChar(255)
  JobTitleID          Int
  ShopID              Int
  RecordStatus        String?               @db.VarChar(1)
  CreateDate          DateTime?             @db.DateTime(0)
  CreateUser          String?               @db.VarChar(10)
  LastDate            DateTime?             @db.DateTime(0)
  LastUser            String?               @db.VarChar(10)
  Employee_first_name String                @db.VarChar(100)
  Employee_last_name  String                @db.VarChar(100)
  BillProductExchange BillProductExchange[]
  EmployeeFK1         MasJobTitle?          @relation(fields: [JobTitleID], references: [JobTitleID])
  EmployeeFK2         Shop?                 @relation(fields: [ShopID], references: [ShopID])
  ListOrder           ListOrder[]
  ListOrderRequest    ListOrderRequest[]
  Statement           Statement[]

  @@index([JobTitleID], map: "Employee_JobTitleID_fkey")
  @@index([ShopID], map: "Employee_ShopID_fkey")
}

model Customer {
  CustomerID            Int                   @id @default(autoincrement())
  Customer_username     String                @db.VarChar(255)
  Customer_password     String                @db.VarChar(255)
  Customer_first_name   String                @db.VarChar(255)
  Customer_last_name    String                @db.VarChar(255)
  Customer_phone_number String?               @db.VarChar(80)
  Customer_point        Int?
  Position_code         String?               @db.VarChar(255)
  ShopID                Int
  RecordStatus          String?               @db.VarChar(1)
  CreateDate            DateTime?             @db.DateTime(0)
  CreateUser            String?               @db.VarChar(10)
  LastDate              DateTime?             @db.DateTime(0)
  LastUser              String?               @db.VarChar(10)
  Bill                  Bill[]
  BillProductExchange   BillProductExchange[]
  CustomerFK1           Shop?                 @relation(fields: [ShopID], references: [ShopID])
  ListOrderRequest      ListOrderRequest[]

  @@index([ShopID], map: "Customer_ShopID_fkey")
}

model BillProductExchange {
  BillProductExchangeID    Int                   @id @default(autoincrement())
  EmployeeID               Int
  CustomerID               Int
  RecordStatus             String?               @db.VarChar(1)
  CreateDate               DateTime?             @db.DateTime(0)
  CreateUser               String?               @db.VarChar(10)
  LastDate                 DateTime?             @db.DateTime(0)
  LastUser                 String?               @db.VarChar(10)
  BillProductExchangeCusFK Customer?             @relation(fields: [CustomerID], references: [CustomerID])
  BillProductExchangeEmFK  Employee?             @relation(fields: [EmployeeID], references: [EmployeeID])
  ListProductExchange      ListProductExchange[]

  @@index([CustomerID], map: "BillProductExchange_CustomerID_fkey")
  @@index([EmployeeID], map: "BillProductExchange_EmployeeID_fkey")
}

model ListProductExchange {
  ProductExchangeID      Int
  BillProductExchangeID  Int
  ProductExchange_count  Int
  Total_score            Int
  RecordStatus           String?              @db.VarChar(1)
  CreateDate             DateTime?            @db.DateTime(0)
  CreateUser             String?              @db.VarChar(10)
  LastDate               DateTime?            @db.DateTime(0)
  LastUser               String?              @db.VarChar(10)
  ListProductExchangeFK2 BillProductExchange? @relation(fields: [BillProductExchangeID], references: [BillProductExchangeID])
  ListProductExchangeFK1 ProductExchange?     @relation(fields: [ProductExchangeID], references: [ProductExchangeID])

  @@id([ProductExchangeID, BillProductExchangeID])
  @@index([BillProductExchangeID], map: "ListProductExchange_BillProductExchangeID_fkey")
}

model ProductExchange {
  ProductExchangeID    Int                   @id @default(autoincrement())
  ProductExchange_code String                @db.VarChar(255)
  ProductExchange_name String                @unique @db.VarChar(255)
  Score_point          Int
  ProductExchange_IMG  String                @db.VarChar(255)
  RecordStatus         String?               @db.VarChar(1)
  CreateDate           DateTime?             @db.DateTime(0)
  CreateUser           String?               @db.VarChar(10)
  LastDate             DateTime?             @db.DateTime(0)
  LastUser             String?               @db.VarChar(10)
  ShopID               Int
  ListProductExchange  ListProductExchange[]
  ProductExchangeFK1   Shop?                 @relation(fields: [ShopID], references: [ShopID])

  @@index([ShopID], map: "ProductExchange_ShopID_fkey")
}

model ListOrderRequest {
  OrderRequestID      Int            @id @default(autoincrement())
  OrderRequest_status String         @db.VarChar(10)
  CustomerID          Int
  EmployeeID          Int
  RecordStatus        String?        @db.VarChar(1)
  CreateDate          DateTime?      @db.DateTime(0)
  CreateUser          String?        @db.VarChar(10)
  LastDate            DateTime?      @db.DateTime(0)
  LastUser            String?        @db.VarChar(10)
  ListOrderRequestFK1 Customer?      @relation(fields: [CustomerID], references: [CustomerID])
  ListOrderRequestFK2 Employee?      @relation(fields: [EmployeeID], references: [EmployeeID])
  OrderRequest        OrderRequest[]

  @@index([CustomerID], map: "ListOrderRequest_CustomerID_fkey")
  @@index([EmployeeID], map: "ListOrderRequest_EmployeeID_fkey")
}

model OrderRequest {
  OrderRequestID  Int
  ProductID       Int
  Product_count   Int
  RecordStatus    String?           @db.VarChar(1)
  CreateDate      DateTime?         @db.DateTime(0)
  CreateUser      String?           @db.VarChar(10)
  LastDate        DateTime?         @db.DateTime(0)
  LastUser        String?           @db.VarChar(10)
  OrderRequestFK1 ListOrderRequest? @relation(fields: [OrderRequestID], references: [OrderRequestID])
  OrderRequestFK2 Product?          @relation(fields: [ProductID], references: [ProductID])

  @@id([OrderRequestID, ProductID])
  @@index([ProductID], map: "OrderRequest_ProductID_fkey")
}

model Product {
  ProductID     Int            @id @default(autoincrement())
  Product_code  String         @db.VarChar(255)
  Product_name  String         @unique @db.VarChar(255)
  Product_price Int
  Product_IMG   String         @db.VarChar(255)
  RecordStatus  String?        @db.VarChar(1)
  CreateDate    DateTime?      @db.DateTime(0)
  CreateUser    String?        @db.VarChar(10)
  LastDate      DateTime?      @db.DateTime(0)
  LastUser      String?        @db.VarChar(10)
  ShopID        Int
  OrderExport   OrderExport[]
  OrderRequest  OrderRequest[]
  ProductFK1    Shop?          @relation(fields: [ShopID], references: [ShopID])

  @@index([ShopID], map: "Product_ShopID_fkey")
}

model ListOrder {
  OrderID      Int           @id @default(autoincrement())
  EmployeeID   Int
  RecordStatus String?       @db.VarChar(1)
  CreateDate   DateTime?     @db.DateTime(0)
  CreateUser   String?       @db.VarChar(10)
  LastDate     DateTime?     @db.DateTime(0)
  LastUser     String?       @db.VarChar(10)
  ListOrderFK1 Employee?     @relation(fields: [EmployeeID], references: [EmployeeID])
  OrderExport  OrderExport[]

  @@index([EmployeeID], map: "ListOrder_EmployeeID_fkey")
}

model Bill {
  BillID       Int           @id @default(autoincrement())
  StatementID  Int
  Bill_code    String
  Pay_type     String        @db.VarChar(100)
  CustomerID   Int
  RecordStatus String?       @db.VarChar(1)
  CreateDate   DateTime?     @db.DateTime(0)
  CreateUser   String?       @db.VarChar(10)
  LastDate     DateTime?     @db.DateTime(0)
  LastUser     String?       @db.VarChar(10)
  BillFK1      Customer?     @relation(fields: [CustomerID], references: [CustomerID])
  BillFK2      Statement?    @relation(fields: [StatementID], references: [StatementID])
  OrderExport  OrderExport[]

  @@index([CustomerID], map: "Bill_CustomerID_fkey")
  @@index([StatementID], map: "Bill_StatementID_fkey")
}

model Statement {
  StatementID      Int       @id @default(autoincrement())
  Statement_number Int
  EmployeeID       Int
  State_on         DateTime
  State_off        DateTime
  Change_in_box    Int
  Total_price      Int?
  Receive          Int?
  RecordStatus     String?   @db.VarChar(1)
  CreateDate       DateTime? @db.DateTime(0)
  CreateUser       String?   @db.VarChar(10)
  LastDate         DateTime? @db.DateTime(0)
  LastUser         String?   @db.VarChar(10)
  Bill             Bill[]
  StatementFK1     Employee? @relation(fields: [EmployeeID], references: [EmployeeID])

  @@index([EmployeeID], map: "Statement_EmployeeID_fkey")
}

model OrderExport {
  BillID         Int
  ProductID      Int
  OrderID        Int
  Product_count  Int
  RecordStatus   String?    @db.VarChar(1)
  CreateDate     DateTime?  @db.DateTime(0)
  CreateUser     String?    @db.VarChar(10)
  LastDate       DateTime?  @db.DateTime(0)
  LastUser       String?    @db.VarChar(10)
  OrderExportFK1 Bill?      @relation(fields: [BillID], references: [BillID])
  OrderExportFK3 ListOrder? @relation(fields: [OrderID], references: [OrderID])
  OrderExportFK2 Product?   @relation(fields: [ProductID], references: [ProductID])

  @@id([BillID, ProductID])
  @@index([OrderID], map: "OrderExport_OrderID_fkey")
  @@index([ProductID], map: "OrderExport_ProductID_fkey")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view Bill_detail {
  Shop_code         String @db.VarChar(255)
  Shop_name         String @db.VarChar(255)
  Bill_code         String
  Product_count     Int
  Product_name      String @db.VarChar(255)
  Product_price     Int
  Total_price       BigInt @default(0)
  Customer_username String @db.VarChar(255)
  Customer_name     String @default("") @db.VarChar(511)
  Pay_type          String @db.VarChar(100)
  Statement_number  Int

  @@unique([Bill_code, Product_name])
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view Customer_detail {
  Customer_name         String? @db.VarChar(511)
  CustomerID            Int     @unique @default(0)
  Customer_username     String  @db.VarChar(255)
  Customer_password     String  @db.VarChar(255)
  Customer_phone_number String? @db.VarChar(80)
  Customer_point        Int?
  Shop_code             String  @db.VarChar(255)
  Shop_name             String  @db.VarChar(255)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view Employee_detail {
  Employee_name     String? @db.VarChar(201)
  JobTitle_name     String  @db.VarChar(255)
  EmployeeID        Int     @unique @default(0)
  Employee_username String  @db.VarChar(255)
  Employee_password String  @db.VarChar(255)
  Shop_code         String  @db.VarChar(255)
  Shop_name         String  @db.VarChar(255)
  Shop_address      String  @db.VarChar(255)
  ProvinceNameTh    String  @db.VarChar(255)
  DistrictNameTh    String  @db.VarChar(255)
  SubDistrictNameTh String  @db.VarChar(255)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view Owner_detail {
  Owner_name        String? @db.VarChar(201)
  JobTitle_name     String  @db.VarChar(255)
  OwnerID           Int     @unique @default(0)
  Owner_username    String  @db.VarChar(255)
  Owner_password    String  @db.VarChar(255)
  StatusLogin       String  @db.VarChar(1)
  Shop_code         String  @db.VarChar(255)
  Shop_name         String  @db.VarChar(255)
  Shop_address      String  @db.VarChar(255)
  ProvinceNameTh    String  @db.VarChar(255)
  DistrictNameTh    String  @db.VarChar(255)
  SubDistrictNameTh String  @db.VarChar(255)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view Statement_detail {
  Shop_code        String   @db.VarChar(255)
  Statement_number Int
  Employee_name    String?  @db.VarChar(201)
  State_on         DateTime
  State_off        DateTime
  Change_in_box    Int
  Total_price      Int?
  Receive          Int?

  @@unique([Shop_code, Statement_number])
}
